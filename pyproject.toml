# Copyright (c) 2020 Adam Karpierz
# SPDX-License-Identifier: LGPL-2.1-or-later

[build-system]
build-backend = 'setuptools.build_meta'
requires = ['setuptools>=75.6.0', 'packaging>=24.2.0', 'tox>=4.23.2']

[project]
name        = 'tox-backtick'
version     = '0.5.5'
description = 'Backticks tox plugin for tox v.4.x.x.'
urls.Homepage      = 'https://pypi.org/project/tox-backtick/'
urls.Documentation = 'https://tox-backtick.readthedocs.io/'
urls.Download      = 'https://pypi.org/project/tox-backtick/'
urls.Source        = 'https://github.com/karpierz/tox-backtick'
urls.Issues        = 'https://github.com/karpierz/tox-backtick/issues'
license = { text = 'LGPL-2.1-or-later License ; https://opensource.org/license/lgpl-2-1' }
authors = [
    { name  = 'Damien NadÃ©, Adam Karpierz' },
    { email = 'adam@karpierz.net' },
]
maintainers = [
    { name  = 'Adam Karpierz' },
    { email = 'adam@karpierz.net' },
]
keywords = ['tox', 'backtick', 'backtocks', 'backticks', 'backquotes']
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)',
    'Operating System :: OS Independent',
    'Natural Language :: Polish',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: Implementation :: CPython',
    'Programming Language :: Python :: Implementation :: PyPy',
    'Topic :: Software Development :: Quality Assurance',
    'Topic :: Software Development :: Testing',
    'Environment :: Console',
    'Framework :: tox',
]
requires-python = '>=3.9.0,<4.0.0'
dependencies = [
    # mandatory
    'setuptools>=75.6.0',
    'pkg-about>=1.2.6',
    # others
    'tox>=4.23.2',
]
dynamic = ['readme']
optional-dependencies.'doc' = [
    'Sphinx>=7.4.7',
    'sphinx-toolbox>=3.8.1',
    'sphinx-tabs>=3.4.5', # don't touch! sphinx-toolbox requires <3.4.7
    'sphinx-copybutton>=0.5.2',
    'sphinxcontrib-spelling>=8.0.0',
    'sphinx-lint>=1.0.0',
    'restructuredtext-lint>=1.4.0',
    'nbsphinx>=0.9.5',
]
optional-dependencies.'test' = [
    'deepdiff>=8.0.1',
    'rich>=13.9.4',
]

[project.scripts]
#'tox_backtick' = 'tox_backtick.__main__:main'

[project.gui-scripts]
#'tox_backtick-gui' = 'tox_backtick:main_gui'

[project.entry-points.'tox']
backtick = 'tox_backtick'

[tool.setuptools.dynamic]
readme = { file = ['README.rst', 'CHANGES.rst'], content-type = 'text/x-rst; charset=UTF-8' }

[tool.setuptools]
license-files = ['LICENSE']
include-package-data = true
platforms = ['any']
zip-safe = true

[tool.setuptools.packages.find]
namespaces = false
where = ['src']

[tool.setuptools.package-dir]
'' = 'src'
#'tox_backtick.tests' = 'tests'

[tool.setuptools.package-data]
tox_backtick = [
]

[tool.setuptools.exclude-package-data]
'*' = ['*.c','*.h','*.cpp','*.hpp','*.cxx','*.hxx','*.pyx','*.pxd']
tox_backtick = [
]

[tool.coverage]
# run
run.source = [
    'tox_backtick',
    'tests',
]
run.omit = [
]
run.branch = true
run.data_file = '.tox/coverage/.coverage'
run.plugins = ['covdefaults']
# report
report.exclude_lines = [
    # Regexes
    # Have to re-enable the standard pragma
    '^\s*if\s+self\.debug\s*:',
    '^\s*if\s+__debug__\s*:',
    '^\s*if\s+(0|False)\s*:',
    '''if\s+__name__.*\s*==\s*['"]__main__['"]\s*:''',
    '^\s*@unittest\.skip\(',
    '^\s*@unittest\.skipIf\(sys\.platform\.startswith\("win"\)',
]
report.omit = [
    'tests/run.py',
]
report.skip_covered = false
# html report
html.directory = '.tox/coverage/.coverage.html'

[tool.flake8]
filename = ['*.py','*.pyx']
#include = ['tests']
#exclude = ['.tox','*.egg','.git','__pycache__','build','_build','docs/_build','dist']
max-line-length = 99
ignore = ['E126','E203','E221','E251','E302','E701','E702','E731',
          'E122','E127','E128','E222','E272','E241','E266','E226','E704',
          'D100','D101','D102','D103','D104','D400','D401','D202',
          'N806','N802','N803','N801',
          'I100','W503']
# (e.g. 'E4','W') default: 'E121','E123','126','226','E24','704'
#select =
#select = ['E','W','F','N','I']
output-file = '.tox/lint/flake8out.txt'
count = true
#show-pep8,
#show-source
#verbose
#quiet

#
# Configuration(s) for tox
#

[tool.tox]  # tox-backtick
env_list = [{replace='ref',of=['tool','tox','labels','py'],extend=true}, 'lint', 'docs']
min_version = '4.23.2'
skip_missing_interpreters = true
requires = [
    {replace='ref',of=['tool','tox','_','base','deps'],extend=true},
    'virtualenv>=20.28.0',
    'tox-tags>=0.2.0',
]
[tool.tox.labels]
py = ['py39','py310','py311','py312','py313', 'pypy39','pypy310']
prepare  = ['prepare']
coverage = ['coverage']
lint = ['lint']
docs = ['docs']
build  = [{replace='ref',of=['tool','tox','labels','py'],extend=true}, 'docs', 'build']
deploy = [{replace='ref',of=['tool','tox','labels','build'],extend=true}, 'publish']

[tool.tox._.base]
base_python = ['python3.12']
deps = [
    'pip>=24.3.1',
    'setuptools>=75.6.0',
]
package_subdir = 'tox_backtick'

[tool.tox.env_run_base]
set_env.PYTHONDONTWRITEBYTECODE = '1'
commands = [
    ['{env_python}','--version'],
    ['{env_python}','-m','tests',{replace='posargs',extend=true}],
]
extras = ['test']
deps = [
    {replace='ref',of=['tool','tox','_','base','deps'],extend=true},
]

[tool.tox.env.'prepare']
base_python = {replace='ref',of=['tool','tox','_','base','base_python']}
skip_install = true
allowlist_externals = [
    'cmd',
    '.build',
]
commands = [
    ['cmd','/C','if','exist','.build.cmd','.build.cmd'],
]
extras = []
deps = []

[tool.tox.env.'coverage']
base_python = {replace='ref',of=['tool','tox','_','base','base_python']}
commands = [
    ['{env_python}','-m','coverage','erase'],
    ['-','{env_python}','-m','coverage','run','-m','tests',{replace="posargs",extend=true}],
    ['-','{env_python}','-m','coverage','html'],
    ['{env_python}','-m','coverage','report'],
]
deps = [
    {replace='ref',of=['tool','tox','env_run_base','deps'],extend=true},
    'coverage>=7.6.9',
    'covdefaults>=2.3.0',
    'diff-cover>=9.2.0',
]

[tool.tox.env.'docs']
base_python = {replace='ref',of=['tool','tox','_','base','base_python']}
commands = [
    ['{env_python}','-m','sphinxlint','--ignore','.tox','--ignore','build','--ignore','dist'],
   #['{env_python}','-m','sphinx.apidoc','-f','{envsitepackagesdir}/{[tool.tox._.base]package_subdir}'],
    ['{env_python}','-m','sphinx.cmd.build','-W','-a','-b','html','-E','./docs','./build/docs/html'],
    ['{env_python}','-m','sphinx.cmd.build','-W','-a','-b','linkcheck','./docs','./build/docs/html'],
    ['{env_python}','-m','sphinx.cmd.build','-W','-a','-b','doctest',  './docs','./build/docs/html'],
]
extras = ['doc']
deps = [
    {replace='ref',of=['tool','tox','_','base','deps'],extend=true},
]

[tool.tox.env.'build']
depends = [{replace='ref',of=['tool','tox','labels','py'],extend=true}, 'docs']
base_python = {replace='ref',of=['tool','tox','_','base','base_python']}
commands = [
    ['{env_python}','-W','ignore','-c','from setuptools import setup ; setup()','--quiet','sdist','--formats=gztar'],
    ['{env_python}','-W','ignore','-c','from setuptools import setup ; setup()','--quiet','bdist_wheel'],
    # check out for PyPi
    ['{env_python}','-m','twine','check','dist/*'],
]
deps = [
    {replace='ref',of=['tool','tox','env_run_base','deps'],extend=true},
    'twine>=6.0.1',
]

[tool.tox.env.'publish']
depends = ['build']
base_python = {replace='ref',of=['tool','tox','_','base','base_python']}
skip_install = true
commands = [
    # publish on PyPi
    ['{env_python}','-m','twine','upload','dist/*'],
]
extras = []
deps = [
    'twine>=6.0.1',
]

[tool.tox.env.'lint']
base_python = {replace='ref',of=['tool','tox','_','base','base_python']}
commands = [
    ['{env_python}','-m','flake8','{envsitepackagesdir}/{[tool.tox._.base]package_subdir}/'],
]
extras = []
deps = [
    {replace='ref',of=['tool','tox','env_run_base','deps'],extend=true},
    'flake8>=7.1.1',
    'flake8-pyproject>=1.2.3',
    'flake8-docstrings>=1.7.0',
    'pep8-naming>=0.14.1',
    'flake8-builtins>=2.5.0',
    'flake8-deprecated>=2.2.1',
]
